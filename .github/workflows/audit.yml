name: Performance Audit

on:
  issue_comment:
    types:
    - created

jobs:
  generate_lighthouse_audit:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, 'check-perf')}}
    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: Kratos
      - name: Get Comment
        uses: actions/github-script@v6
        id: get_comment
        with:
          script: |
            const comment = `${{ steps.fc.outputs.comment-body }}`
            const commentId = `${{ steps.fc.outputs.comment-id }}`
            const urlRegex = /(https?:\/\/[^\s]+)/g
            const host = comment.match(urlRegex)
            github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: 'üö¶ Running Lighthouse audit...'
            })
            core.setOutput("host", comment[0]); 
            core.setOutput("commentId", commentId);
      - name: Add comment to PR
        id: _comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.LHCI_GITHUB_TOKEN }}
          number: ${{ github.event.issue.number }}
          header: perf_check
          recreate: true
          message: |
           ${{ steps.get_comment.outputs.host }}
      - name: Add comment to PR
        id: loading_comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.LHCI_GITHUB_TOKEN }}
          number: ${{ github.event.issue.number }}
          header: perf
          recreate: true
          message: |
            Running performance audit...
      - uses: actions/checkout@v2
      - name: Audit preview URL with Lighthouse
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@v7
        with:
          urls: https://ga-performance-audit-git-perf-check-ber-bernado.vercel.app
          budgetPath: '.github/budget.json'
          uploadArtifacts: true
          temporaryPublicStorage: true
      - name: Cyclops
        id: cyclop_run
        if: ${{ always() }}
        run: |
          npm install -g cyclop-cli
          cyclop-cli test -u=https://ga-performance-audit-git-perf-check-ber-bernado.vercel.app
      - name: Format lighthouse score
        id: format_lighthouse_score
        if: ${{ always() }}
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.LHCI_GITHUB_TOKEN}}
          script: |
            const result = ${{ steps.lighthouse_audit.outputs.manifest }}[0].summary
            const links = ${{ steps.lighthouse_audit.outputs.links }}
            const formatResult = (res) => Math.round((res * 100))
            Object.keys(result).forEach(key => result[key] = formatResult(result[key]))
            const score = res => res >= 90 ? 'üü¢' : res >= 50 ? 'üü†' : 'üî¥'
            const comment = [
                `*Performance audit run on [${Object.keys(links)[0]}](${Object.keys(links)[0]})*`,
                '## Lighthouse',
                `‚ö°Ô∏è [Lighthouse report](${Object.values(links)[0]}) for the changes in this PR:`,
                '| Category | Score |',
                '| --- | --- |',
                `| ${score(result.performance)} Performance | ${result.performance} |`,
                `| ${score(result.accessibility)} Accessibility | ${result.accessibility} |`,
                `| ${score(result['best-practices'])} Best practices | ${result['best-practices']} |`,
                `| ${score(result.seo)} SEO | ${result.seo} |`,
                `| ${score(result.pwa)} PWA | ${result.pwa} |`
            ].join('\n')
             core.setOutput("comment", comment); 
      - name: Format budget result
        id: budget_result
        if: ${{ always() }}
        uses: actions/github-script@v6
        with:
            github-token: ${{secrets.LHCI_GITHUB_TOKEN}}
            script: |
                const assertions = ${{ steps.lighthouse_audit.outputs.assertionResults }}
                if (!assertions.length) {
                  core.setOutput("comment", '‚úÖ Budget met, nothing to see here');
                } else {
                  const comment = assertions.map((result) => {
                    return `
                      ‚ùå **${result.auditProperty || ''}.${result.auditId}
                      ** failure on [${result.url}](${result.url})
                      *${result.auditTitle}
                      * - [docs](${result.auditDocumentationLink})
                      | Actual | Expected |
                      | --- | --- |
                      | ${result.actual} | ${result.operator} ${result.expected} |
                    `
                  }).join('---')
                  core.setOutput("comment", comment);
                }
      - name: Add Budget comment to PR
        id: budget_comment_to_pr
        if: ${{ always() }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
            GITHUB_TOKEN: ${{ secrets.LHCI_GITHUB_TOKEN }}
            number: ${{ github.event.issue.number }}
            header: budget
            recreate: true
            message: |
                ${{ steps.budget_result.outputs.comment }}
      - name: Read CSV Cyclops
        id: cyclop_test
        if: ${{ always() }}
        uses: juliangruber/read-file-action@v1
        with:
          path: ./cyclop-cli-reports/summary.csv
      - name: Create Table
        uses: petems/csv-to-md-table-action@master
        id: csv-table-output
        if: ${{ always() }}
        with:
          csvinput: ${{ steps.cyclop_test.outputs.content }}
      - name: Add comment to PR
        uses: marocchino/sticky-pull-request-comment@v2
        id: comment_to_pr
        if: ${{ always() }}
        with:
          GITHUB_TOKEN: ${{ secrets.LHCI_GITHUB_TOKEN }}
          number: ${{ github.event.issue.number }}
          header: perf
          recreate: true
          message: |
            ${{ steps.format_lighthouse_score.outputs.comment }} 
            ## Cyclop
            ‚ö°Ô∏è **Cyclop report** for the changes in this PR:
            <img width="150" src="https://images.tokopedia.net/img/cyclop-logo.png">
            ${{steps.csv-table-output.outputs.markdown-table}}

